<?php
// Сделайте функцию, которая будет проверять пару чисел на дружественность.
	function dividers($num) {
		$arr = [];
		for ($i = 1; $i < $num; $i++) {
			if ($num % $i === 0) {
				$arr[] = $i;
			}
		}
		return $arr;
	}

	function isFrendlyNumbers($one, $two) {
		return array_sum(dividers($one)) == $two and array_sum(dividers($two)) == $one;
	}

// Используя созданную вами функцию из предыдущей задачи найдите все пары дружественных чисел в промежутке от 1 до 1000.
//  К верхнему коду дополняем этот и убираем var_dump полностью.
	for ($i = 1; $i <= 1000; $i++) {
		for ($j = $i; $j <= 1000; $j++) {
			if (isFrendlyNumbers($i, $j) and $i != $j) {
				echo "Числа '$i' и '$j' дружественные.";
			}
		}
	} // Наверно не лучшее решение, но оно работает, а главное исключает повторения.

// Сделайте функцию, которая будет проверять число на совершенность.
	function isNumPerfect($num) {
		$div = [];
		for ($i = 1; $i < $num; $i++) {
			if ($num % $i === 0) {
				$div[] = $i;
			}
		}
		return array_sum($div) == $num;
	}

// Найдите все счастливые билеты. 
// Счастливый билет - это билет, в котором сумма первых трех цифр его номера равна сумме вторых трех цифр его номера.
	function happyTicket() {
		$l = 0;
		for ($i = 1; $i < 1000; $i++) {
			for ($j = 1; $j < 1000; $j++) {
				$firsthalf = str_split("$i");
				$secondhalf = str_split("$j");
				if (array_sum($firsthalf) == array_sum($secondhalf)) {
					$l++;
				}
			}
		}
		echo "Всего $l счастливых билетов";
	}

// Сделайте функцию, которая параметром будет принимать два числа и возвращать массив их общих делителей.
	function Dividers($num) {
		$arr = [];
		for ($i = 2; $i < $num; $i++) {
			if ($num % $i === 0) {
				$arr[] = $i;
			}
		}
		return $arr;
	}

	function arraysDividers($one, $two) {
		return array_intersect(Dividers($one), Dividers($two));
	}

// Сделайте функцию, которая будет принимать строку на русском языке, а возвращать ее транслит.
	function translit($str) {
		$arr = ['а' => 'a', 'б' => 'b', 'в' => 'v', 'г' => 'g', 'д' => 'd',
		'е' => 'e', 'ё' => 'e', 'ж' => 'zh', 'з' => 'z', 'и' => 'i',
		'й' => 'y', 'к' => 'k', 'л' => 'l', 'м' => 'm', 'н' => 'n',
		'о' => 'o', 'п' => 'p', 'р' => 'r', 'с' => 's', 'т' => 't',
		'у' => 'u', 'ф' => 'f', 'х' => 'h', 'ц' => 'c', 'ч' => 'ch',
		'ш' => 'sh', 'щ' => 'sch', 'ь' => '', 'ы' => 'y', 'ъ' => '',
		'э' => 'e', 'ю' => 'yu', 'я' => 'ya',

		'А' => 'A', 'Б' => 'B', 'В' => 'V', 'Г' => 'G', 'Д' => 'D',
		'Е' => 'E', 'Ё' => 'E', 'Ж' => 'Zh', 'З' => 'Z', 'И' => 'I',
		'Й' => 'Y', 'К' => 'K', 'Л' => 'L', 'М' => 'M', 'Н' => 'N',
		'О' => 'O', 'П' => 'P', 'Р' => 'R', 'С' => 'S', 'Т' => 'T',
		'У' => 'U', 'Ф' => 'F', 'Х' => 'H', 'Ц' => 'C', 'Ч' => 'Ch',
		'Ш' => 'Sh', 'Щ' => 'Sch', 'Ь' => '', 'Ы' => 'Y', 'Ъ' => '',
		'Э' => 'E', 'Ю' => 'Yu', 'Я' => 'Ya'];
		$translit = strtr($str, $arr);
		return $translit;
	}

// Сделайте функцию, которая будет принимать число, а возвращать это число прописью.
	function abcNum($num) {
		$numbers = [1 => 'один', 2 => 'два', 3 => 'три', 4 => 'четыре', 5 => 'пять',
		6 => 'шесть', 7 => 'семь', 8 => 'восемь', 9 => 'девять', 0 => ''];
		$tens = [1 => 'десять', 2 => 'двадцать', 3 => 'тридцать', 4 => 'сорок', 5 => 'пятьдесят',
		6 => 'шестьдесят', 7 => 'семьдесят', 8 => 'восемьдесят', 9 => 'девяносто', 0 => ''];
		$hundreds = [1 => 'сто', 2 => 'двесть', 3 => 'триста', 4 => 'четыреста', 5 => 'пятьсот',
		6 => 'шестьсот', 7 => 'семьсот', 8 => 'восемьсот', 9 => 'девятьсот', 0 => ''];

		if (strlen("$num") == 3) { 
			$ones = strtr($num[2], $numbers); // Не уверен, что для читабельности кода надо этот блок перенести во вложенную функцию
			$twos = strtr($num[1], $tens);
			$threes = strtr($num[0], $hundreds);
			echo $threes.' '.$twos.' '.$ones;
		} elseif (strlen("$num") == 2) {
			$ones = strtr($num[1], $numbers);
			$twos = strtr($num[0], $tens);
			echo $twos.' '.$ones;
		} else { 
			$ones = strtr($num, $numbers);
			echo $ones;
		}
	} 